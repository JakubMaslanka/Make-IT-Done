{"version":3,"sources":["redux/store.js","AuthenticatedApp.js"],"names":["store","configureStore","reducer","tasks","tasksReducer","projects","projectsReducer","AuthenticatedApp","PrivateRoute","path","component","Home","Tasks","Projects","Calendar","Pomodoro","rest","user","useAuth","to"],"mappings":"4NAIaA,EAAQC,YAAe,CAClCC,QAAS,CACPC,MAAOC,IACPC,SAAUC,O,+BCQC,SAASC,IACtB,OACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAACQ,EAAD,CAAcC,KAAK,QAAQC,UAAWC,MACtC,cAACH,EAAD,CAAcC,KAAK,SAASC,UAAWE,MACvC,cAACJ,EAAD,CAAcC,KAAK,YAAYC,UAAWG,MAC1C,cAACL,EAAD,CAAcC,KAAK,YAAYC,UAAWI,MAC1C,cAACN,EAAD,CAAcC,KAAK,YAAYC,UAAWK,WAMlD,SAASP,EAAT,GAAoC,IAATQ,EAAQ,oBACzBC,EAASC,cAATD,KACR,iBAAiCD,GAAzBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACd,OACE,mCACGO,EACC,cAAC,IAAD,CAAOR,KAAMA,EAAMC,UAAWA,IAE9B,cAAC,IAAD,CAAUS,GAAG","file":"static/js/3.8ae7a8b0.chunk.js","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from './tasksSlice';\r\nimport projectsReducer from './projectsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n    projects: projectsReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport { useAuth } from './hooks/useAuth';\r\nimport {\r\n  Home,\r\n  Tasks,\r\n  Projects,\r\n  Calendar,\r\n  Pomodoro,\r\n} from './pages';\r\n\r\nimport TasksProvider from './context/TasksContext';\r\n\r\nexport default function AuthenticatedApp() {\r\n  return (\r\n    <Provider store={store}>\r\n      <TasksProvider>\r\n        <PrivateRoute path=\"/home\" component={Home} />\r\n        <PrivateRoute path=\"/tasks\" component={Tasks} />\r\n        <PrivateRoute path=\"/projects\" component={Projects} />\r\n        <PrivateRoute path=\"/calendar\" component={Calendar} />\r\n        <PrivateRoute path=\"/pomodoro\" component={Pomodoro} />\r\n      </TasksProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ ...rest }) {\r\n  const { user } = useAuth();\r\n  const { path, component } = { ...rest };\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <Route path={path} component={component} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}